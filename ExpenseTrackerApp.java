
import java.awt.Color;
import java.io.IOException;
import java.util.List;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Backup
 */
public class ExpenseTrackerApp extends javax.swing.JFrame {
    
    private static ExpenseManager manager = new ExpenseManager();
    private static final String[] CATEGORIES = { "Food", "Travel", "Entertainment", "Utilities", "Other" };
    
    /**
     * Creates new form ExpenseTrackerApp
     */
    public ExpenseTrackerApp() {
        initComponents();
        
        //Hide warning messages on initialization
        lblNewEntryWarning.setVisible(false);
        lblFileWarning.setVisible(false);
        lblRangeWarning.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        pnlNewEntry = new javax.swing.JPanel();
        lblPrice = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        lblDate = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        lblCategory = new javax.swing.JLabel();
        cmbxCategory = new javax.swing.JComboBox<>();
        lblDescription = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtADescription = new javax.swing.JTextArea();
        btnNewEntry = new javax.swing.JButton();
        lblNewEntryWarning = new javax.swing.JLabel();
        pnlStoredEntries = new javax.swing.JPanel();
        pnlFileControls = new javax.swing.JPanel();
        btnLoadFromFile = new javax.swing.JButton();
        btnSaveToFile = new javax.swing.JButton();
        lblFileWarning = new javax.swing.JLabel();
        pnlDisplayControls = new javax.swing.JPanel();
        btnDateSort = new javax.swing.JButton();
        btnPriceSort = new javax.swing.JButton();
        btnCategorySort = new javax.swing.JButton();
        pnlRangeSort = new javax.swing.JPanel();
        lblStartDate = new javax.swing.JLabel();
        txtStartDate = new javax.swing.JTextField();
        lblEndDate = new javax.swing.JLabel();
        txtEndDate = new javax.swing.JTextField();
        btnDisplayRange = new javax.swing.JButton();
        lblRangeWarning = new javax.swing.JLabel();
        pnlTotalExpense = new javax.swing.JPanel();
        lblTotalExpense = new javax.swing.JLabel();
        txtTotalExpense = new javax.swing.JTextField();
        btnCalculate = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAOutput = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Expanse Tracker");

        pnlNewEntry.setBorder(javax.swing.BorderFactory.createTitledBorder("Add New Expense Entry"));

        lblPrice.setText("Price:");

        lblDate.setText("Date: (YYYY-MM-DD)");

        lblCategory.setText("Category:");

        cmbxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Food", "Travel", "Entertainment", "Utilities", "Other" }));

        lblDescription.setText("Description:");

        txtADescription.setColumns(20);
        txtADescription.setRows(5);
        jScrollPane1.setViewportView(txtADescription);

        btnNewEntry.setText("Create New Expense Entry");
        btnNewEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewEntryActionPerformed(evt);
            }
        });

        lblNewEntryWarning.setFont(new java.awt.Font("Microsoft YaHei UI", 2, 9)); // NOI18N
        lblNewEntryWarning.setForeground(new java.awt.Color(255, 0, 0));
        lblNewEntryWarning.setText("Warning");

        javax.swing.GroupLayout pnlNewEntryLayout = new javax.swing.GroupLayout(pnlNewEntry);
        pnlNewEntry.setLayout(pnlNewEntryLayout);
        pnlNewEntryLayout.setHorizontalGroup(
            pnlNewEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNewEntryLayout.createSequentialGroup()
                .addGroup(pnlNewEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlNewEntryLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlNewEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlNewEntryLayout.createSequentialGroup()
                                .addComponent(lblCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlNewEntryLayout.createSequentialGroup()
                                .addGroup(pnlNewEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDescription)
                                    .addGroup(pnlNewEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(pnlNewEntryLayout.createSequentialGroup()
                                            .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(pnlNewEntryLayout.createSequentialGroup()
                                            .addComponent(lblDate)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlNewEntryLayout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(btnNewEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(lblNewEntryWarning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlNewEntryLayout.setVerticalGroup(
            pnlNewEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNewEntryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlNewEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlNewEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlNewEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(lblDescription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(lblNewEntryWarning)
                .addGap(18, 18, 18)
                .addComponent(btnNewEntry)
                .addContainerGap())
        );

        pnlStoredEntries.setBorder(javax.swing.BorderFactory.createTitledBorder("Stored Entries"));

        pnlFileControls.setBorder(javax.swing.BorderFactory.createTitledBorder("File Controls"));

        btnLoadFromFile.setText("Load From File");
        btnLoadFromFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadFromFileActionPerformed(evt);
            }
        });

        btnSaveToFile.setText("Save To File");
        btnSaveToFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveToFileActionPerformed(evt);
            }
        });

        lblFileWarning.setFont(new java.awt.Font("Microsoft YaHei UI", 2, 9)); // NOI18N
        lblFileWarning.setForeground(new java.awt.Color(255, 0, 0));
        lblFileWarning.setText("Warning");

        javax.swing.GroupLayout pnlFileControlsLayout = new javax.swing.GroupLayout(pnlFileControls);
        pnlFileControls.setLayout(pnlFileControlsLayout);
        pnlFileControlsLayout.setHorizontalGroup(
            pnlFileControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFileControlsLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pnlFileControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnLoadFromFile, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                    .addComponent(btnSaveToFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(90, Short.MAX_VALUE))
            .addComponent(lblFileWarning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlFileControlsLayout.setVerticalGroup(
            pnlFileControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFileControlsLayout.createSequentialGroup()
                .addComponent(btnLoadFromFile)
                .addGap(18, 18, 18)
                .addComponent(btnSaveToFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblFileWarning)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlDisplayControls.setBorder(javax.swing.BorderFactory.createTitledBorder("Display Controls"));

        btnDateSort.setText("Sort By Date");
        btnDateSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDateSortActionPerformed(evt);
            }
        });

        btnPriceSort.setText("Sort By Price");
        btnPriceSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPriceSortActionPerformed(evt);
            }
        });

        btnCategorySort.setText("Sort By Category");
        btnCategorySort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCategorySortActionPerformed(evt);
            }
        });

        pnlRangeSort.setBorder(javax.swing.BorderFactory.createTitledBorder("Custom Range"));

        lblStartDate.setText("From: (YYYY-MM-DD)");

        txtStartDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStartDateActionPerformed(evt);
            }
        });

        lblEndDate.setText("Ends: (YYYY-MM-DD)");

        btnDisplayRange.setText("Display Range");
        btnDisplayRange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayRangeActionPerformed(evt);
            }
        });

        lblRangeWarning.setFont(new java.awt.Font("Microsoft YaHei UI", 2, 9)); // NOI18N
        lblRangeWarning.setForeground(new java.awt.Color(255, 0, 0));
        lblRangeWarning.setText("Warning");

        javax.swing.GroupLayout pnlRangeSortLayout = new javax.swing.GroupLayout(pnlRangeSort);
        pnlRangeSort.setLayout(pnlRangeSortLayout);
        pnlRangeSortLayout.setHorizontalGroup(
            pnlRangeSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRangeSortLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRangeSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblEndDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlRangeSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRangeSortLayout.createSequentialGroup()
                .addComponent(lblRangeWarning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDisplayRange)
                .addContainerGap())
        );
        pnlRangeSortLayout.setVerticalGroup(
            pnlRangeSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRangeSortLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRangeSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStartDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRangeSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlRangeSortLayout.createSequentialGroup()
                        .addComponent(lblEndDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(3, 3, 3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(pnlRangeSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDisplayRange)
                    .addComponent(lblRangeWarning))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlDisplayControlsLayout = new javax.swing.GroupLayout(pnlDisplayControls);
        pnlDisplayControls.setLayout(pnlDisplayControlsLayout);
        pnlDisplayControlsLayout.setHorizontalGroup(
            pnlDisplayControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDisplayControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDisplayControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlRangeSort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlDisplayControlsLayout.createSequentialGroup()
                        .addComponent(btnDateSort, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPriceSort, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCategorySort)))
                .addContainerGap())
        );
        pnlDisplayControlsLayout.setVerticalGroup(
            pnlDisplayControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDisplayControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDisplayControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDateSort)
                    .addComponent(btnPriceSort)
                    .addComponent(btnCategorySort))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlRangeSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlTotalExpense.setBorder(javax.swing.BorderFactory.createTitledBorder("Total Expense"));

        lblTotalExpense.setText("Total Expense:");

        txtTotalExpense.setEditable(false);
        txtTotalExpense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalExpenseActionPerformed(evt);
            }
        });

        btnCalculate.setText("Calculate");
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTotalExpenseLayout = new javax.swing.GroupLayout(pnlTotalExpense);
        pnlTotalExpense.setLayout(pnlTotalExpenseLayout);
        pnlTotalExpenseLayout.setHorizontalGroup(
            pnlTotalExpenseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTotalExpenseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTotalExpense)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(txtTotalExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTotalExpenseLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCalculate)
                .addContainerGap())
        );
        pnlTotalExpenseLayout.setVerticalGroup(
            pnlTotalExpenseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTotalExpenseLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(pnlTotalExpenseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTotalExpense, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTotalExpense))
                .addGap(18, 18, 18)
                .addComponent(btnCalculate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtAOutput.setColumns(20);
        txtAOutput.setRows(5);
        jScrollPane3.setViewportView(txtAOutput);

        javax.swing.GroupLayout pnlStoredEntriesLayout = new javax.swing.GroupLayout(pnlStoredEntries);
        pnlStoredEntries.setLayout(pnlStoredEntriesLayout);
        pnlStoredEntriesLayout.setHorizontalGroup(
            pnlStoredEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStoredEntriesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlStoredEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTotalExpense, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlFileControls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlStoredEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlDisplayControls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        pnlStoredEntriesLayout.setVerticalGroup(
            pnlStoredEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStoredEntriesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlStoredEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlDisplayControls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlFileControls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlStoredEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTotalExpense, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlNewEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(pnlStoredEntries, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlNewEntry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlStoredEntries, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDateSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDateSortActionPerformed
        // TODO add your handling code here:
        List<Expense> sortedByDate = manager.sortExpensesByDate();
        System.err.print("Expenses sorted by date:\n");
            //Replace below with display update method
//            for (Expense expense : sortedByDate) {
//                outputArea.append(expense.toString() + "\n");
//            }
        updateDisplay(sortedByDate);
    }//GEN-LAST:event_btnDateSortActionPerformed

    private void btnCategorySortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCategorySortActionPerformed
        // TODO add your handling code here:
        List<Expense> sortedByCategory = manager.sortExpensesByCategory();
        System.err.print("Expenses sorted by category:\n");
            //Replace below with display update method
//            for (Expense expense : sortedByCategory) {
//                outputArea.append(expense.toString() + "\n");
//            }
            updateDisplay(sortedByCategory);
    }//GEN-LAST:event_btnCategorySortActionPerformed

    private void txtStartDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStartDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStartDateActionPerformed

    private void txtTotalExpenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalExpenseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalExpenseActionPerformed

    private void btnNewEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewEntryActionPerformed
        // TODO add your handling code here:
        try {
            double price = Double.parseDouble(txtPrice.getText());
            String date = txtDate.getText();
            String description = txtADescription.getText();
            String category = (String) cmbxCategory.getSelectedItem();

            if (!Expense.isValidDate(date)) {
                throw new IllegalArgumentException("Invalid date format. Please use YYYY-MM-DD.");
            }

            manager.addExpense(new Expense(price, date, description, category));
            //successfully added a new entry, below merely gives feedbacks to user
            lblNewEntryWarning.setText("Expense added successfully!");
            lblNewEntryWarning.setForeground(Color.blue);
            lblNewEntryWarning.setVisible(true);
        } catch (NumberFormatException ex) {
            lblNewEntryWarning.setText("Invalid price input.\n");
            lblNewEntryWarning.setForeground(Color.red);
            lblNewEntryWarning.setVisible(true);
        } catch (IllegalArgumentException ex) {
            lblNewEntryWarning.setText(ex.getMessage() + "\n");
            lblNewEntryWarning.setForeground(Color.red);
            lblNewEntryWarning.setVisible(true);
        }
        
        updateDisplay(manager.getExpenses());   //update the display right after a new entry is added
    }//GEN-LAST:event_btnNewEntryActionPerformed

    private void btnSaveToFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveToFileActionPerformed
        // TODO add your handling code here:
        try {
            FileHandler.saveExpensesToFile(manager.getExpenses(), "expenses.txt");
            lblFileWarning.setText("Expenses saved to file successfully!\n");
            lblFileWarning.setForeground(Color.blue);
            lblFileWarning.setVisible(true);
        } catch (IOException ex) {
            lblFileWarning.setText("Error saving expenses to file.\n");
            lblFileWarning.setForeground(Color.red);
            lblFileWarning.setVisible(true);
        }
    }//GEN-LAST:event_btnSaveToFileActionPerformed

    private void btnLoadFromFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadFromFileActionPerformed
        // TODO add your handling code here:
        try {
                List<Expense> loadedExpenses = FileHandler.loadExpensesFromFile("expenses.txt");
                for (Expense expense : loadedExpenses) {
                    manager.addExpense(expense);
                }
                lblFileWarning.setText("Expenses loaded from file successfully!\n");
                lblFileWarning.setForeground(Color.blue);
                lblFileWarning.setVisible(true);
            } catch (IOException ex) {
                lblFileWarning.setText("Error loading expenses from file.\n");
                lblFileWarning.setForeground(Color.red);
                lblFileWarning.setVisible(true);
            } catch(RuntimeException  e){   //If it passed IO and still run into exception we assume the data is corrupt. (For instance files before the year restrictions can have invalid years thus throw errors, this seeks to resolve that, well not really.)
                lblFileWarning.setText("File corrupted, please make a new file to overwrite it.\n");
                lblFileWarning.setForeground(Color.red);
                lblFileWarning.setVisible(true);
            }
    }//GEN-LAST:event_btnLoadFromFileActionPerformed

    private void btnPriceSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPriceSortActionPerformed
        // TODO add your handling code here:
         List<Expense> sortedByPrice = manager.sortExpensesByPriceBubbleSort();
        System.err.print("Expenses sorted by price:\n");
            //Replace below with display update method
//            for (Expense expense : sortedByPrice) {
//                outputArea.append(expense.toString() + "\n");
//            }
        updateDisplay(sortedByPrice);
    }//GEN-LAST:event_btnPriceSortActionPerformed

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        // TODO add your handling code here:
        double total = manager.calculateTotalExpensesRecursive();
        txtTotalExpense.setText("$" + total );
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void btnDisplayRangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayRangeActionPerformed
        // TODO add your handling code here:
        String startDate = txtStartDate.getText();
        String endDate = txtEndDate.getText();

        try {
            //Replace below with display update method
            List<Expense> rangeExpenses = manager.getExpensesWithinDateRange(startDate, endDate);
//            outputArea.append("Expenses from " + startDate + " to " + endDate + ":\n");
//            for (Expense expense : rangeExpenses) {
//                outputArea.append(expense.toString() + "\n");
//            }
            updateDisplay(rangeExpenses);
        } catch (IllegalArgumentException ex) {
            lblRangeWarning.setText("Invalid date range or format. Use YYYY-MM-DD.");
            lblRangeWarning.setForeground(Color.red);
            lblRangeWarning.setVisible(true);
        }
    }//GEN-LAST:event_btnDisplayRangeActionPerformed

    //Custom Methods
    
//    private void updateLstTiles(){
//        Set<String> s=selectedTiles.keySet();
//        String[] names=new String[s.size()];
//        int index=0;
//        for(String st:s){
//            String theValue="";
//            theValue+=st;
//            theValue+="-(";
//            theValue+=selectedTiles.get(st);
//            theValue+=")";
//            
//            for(Shapes sh:shapesList){
//                if(sh.getName().equals(st)){
//                    theValue+=": ";
//                    theValue+=priceFormat.format(selectedTiles.get(st)*sh.getArea());
//                    theValue+=", ";
//                    theValue+=areaFormat.format(selectedTiles.get(st)*sh.getArea());
//                    theValue+="m².";
//                    break;
//                }
//            }
//            
//            names[index]=theValue;
//            index++;
//        }
//        lstTiles.setListData(names);
//    }
    
    private void updateDisplay(List<Expense> l){ //TODO: polish up
        List<Expense> allExpenses = l;
            if (allExpenses.isEmpty()) {
                txtAOutput.setText("No expenses to display.\n");
            } else {
//                outputArea.append("Displaying all expenses:\n");
                txtAOutput.setText(""); //Clear the text area
                for (Expense expense : allExpenses) {
                    txtAOutput.append(expense.toString() + "\n");
                }
            }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExpenseTrackerApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExpenseTrackerApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExpenseTrackerApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExpenseTrackerApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExpenseTrackerApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnCategorySort;
    private javax.swing.JButton btnDateSort;
    private javax.swing.JButton btnDisplayRange;
    private javax.swing.JButton btnLoadFromFile;
    private javax.swing.JButton btnNewEntry;
    private javax.swing.JButton btnPriceSort;
    private javax.swing.JButton btnSaveToFile;
    private javax.swing.JComboBox<String> cmbxCategory;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblEndDate;
    private javax.swing.JLabel lblFileWarning;
    private javax.swing.JLabel lblNewEntryWarning;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblRangeWarning;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTotalExpense;
    private javax.swing.JPanel pnlDisplayControls;
    private javax.swing.JPanel pnlFileControls;
    private javax.swing.JPanel pnlNewEntry;
    private javax.swing.JPanel pnlRangeSort;
    private javax.swing.JPanel pnlStoredEntries;
    private javax.swing.JPanel pnlTotalExpense;
    private javax.swing.JTextArea txtADescription;
    private javax.swing.JTextArea txtAOutput;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtEndDate;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtTotalExpense;
    // End of variables declaration//GEN-END:variables
}
