
import java.awt.Color;
import java.io.IOException;
import java.util.List;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Backup
 */
public class ExpenseTrackerApp extends javax.swing.JFrame {
    
    private static ExpenseManager manager = new ExpenseManager();
    private static final String[] CATEGORIES = { "Food", "Travel", "Entertainment", "Utilities", "Other" };
    
    /**
     * Creates new form ExpenseTrackerApp
     */
    public ExpenseTrackerApp() {
        initComponents();
        
        //Hide warning messages on initialization
        lblNewEntryWarning.setVisible(false);
        lblFileWarning.setVisible(false);
        lblRangeWarning.setVisible(false);
        lblSearchWarning.setVisible(false);
        
        dlgSaveConfirmWindow.setVisible(false);
        dlgSaveConfirmWindow.setDefaultCloseOperation(HIDE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlgSaveConfirmWindow = new javax.swing.JDialog();
        btnConcle = new javax.swing.JButton();
        btnConfirm = new javax.swing.JButton();
        lblInfo = new javax.swing.JLabel();
        lblConfirmWindownTitle = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        pnlNewEntry = new javax.swing.JPanel();
        lblPrice = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        lblDate = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        lblCategory = new javax.swing.JLabel();
        cmbxCategory = new javax.swing.JComboBox<>();
        lblDescription = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtADescription = new javax.swing.JTextArea();
        btnNewEntry = new javax.swing.JButton();
        lblNewEntryWarning = new javax.swing.JLabel();
        lblEntryTitle = new javax.swing.JLabel();
        txtEntryTitle = new javax.swing.JTextField();
        pnlStoredEntries = new javax.swing.JPanel();
        pnlDisplayControls = new javax.swing.JPanel();
        btnDateSort = new javax.swing.JButton();
        btnPriceSort = new javax.swing.JButton();
        btnCategorySort = new javax.swing.JButton();
        pnlRangeSort = new javax.swing.JPanel();
        lblStartDate = new javax.swing.JLabel();
        txtStartDate = new javax.swing.JTextField();
        lblEndDate = new javax.swing.JLabel();
        txtEndDate = new javax.swing.JTextField();
        btnDisplayRange = new javax.swing.JButton();
        lblRangeWarning = new javax.swing.JLabel();
        pnlTotalExpense = new javax.swing.JPanel();
        lblTotalExpense = new javax.swing.JLabel();
        txtTotalExpense = new javax.swing.JTextField();
        btnCalculate = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAOutput = new javax.swing.JTextArea();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlFileControls = new javax.swing.JPanel();
        btnLoadFromFile = new javax.swing.JButton();
        btnSaveToFile = new javax.swing.JButton();
        lblFileWarning = new javax.swing.JLabel();
        pnlSearch = new javax.swing.JPanel();
        lblTargetID = new javax.swing.JLabel();
        txtTargetID = new javax.swing.JTextField();
        lblSearchWarning = new javax.swing.JLabel();
        btnConfirmSearch = new javax.swing.JButton();

        dlgSaveConfirmWindow.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dlgSaveConfirmWindow.setTitle("File Save Warning");
        dlgSaveConfirmWindow.setAlwaysOnTop(true);
        dlgSaveConfirmWindow.setBounds(new java.awt.Rectangle(0, 0, 373, 130));
        dlgSaveConfirmWindow.setMinimumSize(new java.awt.Dimension(373, 130));
        dlgSaveConfirmWindow.setResizable(false);

        btnConcle.setText("Cancle");
        btnConcle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConcleActionPerformed(evt);
            }
        });

        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        lblInfo.setText("Are you sure you want to save and overwrite the previous file?");

        lblConfirmWindownTitle.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
        lblConfirmWindownTitle.setText("WARNING");

        javax.swing.GroupLayout dlgSaveConfirmWindowLayout = new javax.swing.GroupLayout(dlgSaveConfirmWindow.getContentPane());
        dlgSaveConfirmWindow.getContentPane().setLayout(dlgSaveConfirmWindowLayout);
        dlgSaveConfirmWindowLayout.setHorizontalGroup(
            dlgSaveConfirmWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgSaveConfirmWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dlgSaveConfirmWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dlgSaveConfirmWindowLayout.createSequentialGroup()
                        .addComponent(btnConcle, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dlgSaveConfirmWindowLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblInfo)))
                .addContainerGap())
            .addGroup(dlgSaveConfirmWindowLayout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(lblConfirmWindownTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dlgSaveConfirmWindowLayout.setVerticalGroup(
            dlgSaveConfirmWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dlgSaveConfirmWindowLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(lblConfirmWindownTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblInfo)
                .addGap(48, 48, 48)
                .addGroup(dlgSaveConfirmWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirm)
                    .addComponent(btnConcle))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Expanse Tracker");

        pnlNewEntry.setBorder(javax.swing.BorderFactory.createTitledBorder("Add New Expense Entry"));

        lblPrice.setText("Price:");

        lblDate.setText("Date: (YYYY-MM-DD)");

        lblCategory.setText("Category:");

        cmbxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Food", "Travel", "Entertainment", "Utilities", "Other" }));

        lblDescription.setText("Description:");

        txtADescription.setColumns(20);
        txtADescription.setRows(5);
        jScrollPane1.setViewportView(txtADescription);

        btnNewEntry.setText("Create New Expense Entry");
        btnNewEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewEntryActionPerformed(evt);
            }
        });

        lblNewEntryWarning.setFont(new java.awt.Font("Microsoft YaHei UI", 2, 9)); // NOI18N
        lblNewEntryWarning.setForeground(new java.awt.Color(255, 0, 0));
        lblNewEntryWarning.setText("Warning");

        lblEntryTitle.setText("Title:");

        txtEntryTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEntryTitleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlNewEntryLayout = new javax.swing.GroupLayout(pnlNewEntry);
        pnlNewEntry.setLayout(pnlNewEntryLayout);
        pnlNewEntryLayout.setHorizontalGroup(
            pnlNewEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNewEntryLayout.createSequentialGroup()
                .addGroup(pnlNewEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNewEntryWarning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlNewEntryLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlNewEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlNewEntryLayout.createSequentialGroup()
                                .addComponent(lblCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlNewEntryLayout.createSequentialGroup()
                                .addComponent(lblDescription)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnlNewEntryLayout.createSequentialGroup()
                                .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlNewEntryLayout.createSequentialGroup()
                                .addComponent(lblDate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlNewEntryLayout.createSequentialGroup()
                                .addComponent(lblEntryTitle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtEntryTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(pnlNewEntryLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnNewEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        pnlNewEntryLayout.setVerticalGroup(
            pnlNewEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNewEntryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlNewEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlNewEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlNewEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(pnlNewEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEntryTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEntryTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDescription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(lblNewEntryWarning)
                .addGap(18, 18, 18)
                .addComponent(btnNewEntry)
                .addContainerGap())
        );

        pnlStoredEntries.setBorder(javax.swing.BorderFactory.createTitledBorder("Stored Entries"));

        pnlDisplayControls.setBorder(javax.swing.BorderFactory.createTitledBorder("Display Controls"));

        btnDateSort.setText("Sort By Date");
        btnDateSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDateSortActionPerformed(evt);
            }
        });

        btnPriceSort.setText("Sort By Price");
        btnPriceSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPriceSortActionPerformed(evt);
            }
        });

        btnCategorySort.setText("Sort By Category");
        btnCategorySort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCategorySortActionPerformed(evt);
            }
        });

        pnlRangeSort.setBorder(javax.swing.BorderFactory.createTitledBorder("Custom Range"));

        lblStartDate.setText("From: (YYYY-MM-DD)");

        txtStartDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStartDateActionPerformed(evt);
            }
        });

        lblEndDate.setText("Ends: (YYYY-MM-DD)");

        btnDisplayRange.setText("Display Range");
        btnDisplayRange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayRangeActionPerformed(evt);
            }
        });

        lblRangeWarning.setFont(new java.awt.Font("Microsoft YaHei UI", 2, 9)); // NOI18N
        lblRangeWarning.setForeground(new java.awt.Color(255, 0, 0));
        lblRangeWarning.setText("Warning");

        javax.swing.GroupLayout pnlRangeSortLayout = new javax.swing.GroupLayout(pnlRangeSort);
        pnlRangeSort.setLayout(pnlRangeSortLayout);
        pnlRangeSortLayout.setHorizontalGroup(
            pnlRangeSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRangeSortLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRangeSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblEndDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlRangeSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRangeSortLayout.createSequentialGroup()
                .addComponent(lblRangeWarning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDisplayRange)
                .addContainerGap())
        );
        pnlRangeSortLayout.setVerticalGroup(
            pnlRangeSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRangeSortLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRangeSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStartDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRangeSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlRangeSortLayout.createSequentialGroup()
                        .addComponent(lblEndDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(3, 3, 3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(pnlRangeSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDisplayRange)
                    .addComponent(lblRangeWarning))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlDisplayControlsLayout = new javax.swing.GroupLayout(pnlDisplayControls);
        pnlDisplayControls.setLayout(pnlDisplayControlsLayout);
        pnlDisplayControlsLayout.setHorizontalGroup(
            pnlDisplayControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDisplayControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDisplayControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlRangeSort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlDisplayControlsLayout.createSequentialGroup()
                        .addComponent(btnDateSort, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPriceSort, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCategorySort)))
                .addContainerGap())
        );
        pnlDisplayControlsLayout.setVerticalGroup(
            pnlDisplayControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDisplayControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDisplayControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDateSort)
                    .addComponent(btnPriceSort)
                    .addComponent(btnCategorySort))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlRangeSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlTotalExpense.setBorder(javax.swing.BorderFactory.createTitledBorder("Total Expense"));

        lblTotalExpense.setText("Total Expense:");

        txtTotalExpense.setEditable(false);
        txtTotalExpense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalExpenseActionPerformed(evt);
            }
        });

        btnCalculate.setText("Calculate");
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTotalExpenseLayout = new javax.swing.GroupLayout(pnlTotalExpense);
        pnlTotalExpense.setLayout(pnlTotalExpenseLayout);
        pnlTotalExpenseLayout.setHorizontalGroup(
            pnlTotalExpenseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTotalExpenseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTotalExpense)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtTotalExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTotalExpenseLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCalculate)
                .addContainerGap())
        );
        pnlTotalExpenseLayout.setVerticalGroup(
            pnlTotalExpenseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTotalExpenseLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(pnlTotalExpenseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTotalExpense, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTotalExpense))
                .addGap(18, 18, 18)
                .addComponent(btnCalculate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtAOutput.setEditable(false);
        txtAOutput.setColumns(20);
        txtAOutput.setRows(5);
        jScrollPane3.setViewportView(txtAOutput);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        pnlFileControls.setBorder(javax.swing.BorderFactory.createTitledBorder("File Controls"));

        btnLoadFromFile.setText("Load From File");
        btnLoadFromFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadFromFileActionPerformed(evt);
            }
        });

        btnSaveToFile.setText("Save To File");
        btnSaveToFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveToFileActionPerformed(evt);
            }
        });

        lblFileWarning.setFont(new java.awt.Font("Microsoft YaHei UI", 2, 9)); // NOI18N
        lblFileWarning.setForeground(new java.awt.Color(255, 0, 0));
        lblFileWarning.setText("Warning");

        javax.swing.GroupLayout pnlFileControlsLayout = new javax.swing.GroupLayout(pnlFileControls);
        pnlFileControls.setLayout(pnlFileControlsLayout);
        pnlFileControlsLayout.setHorizontalGroup(
            pnlFileControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFileControlsLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pnlFileControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnLoadFromFile, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                    .addComponent(btnSaveToFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(lblFileWarning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlFileControlsLayout.setVerticalGroup(
            pnlFileControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFileControlsLayout.createSequentialGroup()
                .addComponent(btnLoadFromFile)
                .addGap(18, 18, 18)
                .addComponent(btnSaveToFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblFileWarning)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("File Controls", pnlFileControls);

        pnlSearch.setBorder(javax.swing.BorderFactory.createTitledBorder("ID Search"));

        lblTargetID.setText("Target ID:");

        lblSearchWarning.setFont(new java.awt.Font("Microsoft YaHei UI", 2, 9)); // NOI18N
        lblSearchWarning.setForeground(new java.awt.Color(255, 0, 0));
        lblSearchWarning.setText("Warning");

        btnConfirmSearch.setText("Confirm");
        btnConfirmSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSearchLayout = new javax.swing.GroupLayout(pnlSearch);
        pnlSearch.setLayout(pnlSearchLayout);
        pnlSearchLayout.setHorizontalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTargetID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTargetID, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
            .addComponent(lblSearchWarning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSearchLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConfirmSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        pnlSearchLayout.setVerticalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTargetID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTargetID))
                .addGap(36, 36, 36)
                .addComponent(lblSearchWarning)
                .addGap(18, 18, 18)
                .addComponent(btnConfirmSearch)
                .addGap(36, 36, 36))
        );

        jTabbedPane1.addTab("Search By ID", pnlSearch);

        javax.swing.GroupLayout pnlStoredEntriesLayout = new javax.swing.GroupLayout(pnlStoredEntries);
        pnlStoredEntries.setLayout(pnlStoredEntriesLayout);
        pnlStoredEntriesLayout.setHorizontalGroup(
            pnlStoredEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStoredEntriesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlStoredEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTotalExpense, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlStoredEntriesLayout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlStoredEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlDisplayControls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        pnlStoredEntriesLayout.setVerticalGroup(
            pnlStoredEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStoredEntriesLayout.createSequentialGroup()
                .addGroup(pnlStoredEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlStoredEntriesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlDisplayControls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTabbedPane1))
                .addGap(18, 18, 18)
                .addGroup(pnlStoredEntriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTotalExpense, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlNewEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlStoredEntries, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlNewEntry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlStoredEntries, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //*Button Methods*

    //Sort by date
    private void btnDateSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDateSortActionPerformed
        // TODO add your handling code here:
        List<Expense> sortedByDate = manager.sortExpensesByDate();
        System.err.print("Expenses sorted by date:\n");
        updateDisplay(sortedByDate);
    }//GEN-LAST:event_btnDateSortActionPerformed

    //Sort by Category
    private void btnCategorySortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCategorySortActionPerformed
        // TODO add your handling code here:
        List<Expense> sortedByCategory = manager.sortExpensesByCategory();
        System.err.print("Expenses sorted by category:\n");
            updateDisplay(sortedByCategory);
    }//GEN-LAST:event_btnCategorySortActionPerformed

    //Creates a new instance of expense in expense manager's list
    private void btnNewEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewEntryActionPerformed
        // TODO add your handling code here:
        try {
            double price = Double.parseDouble(txtPrice.getText());
            String date = txtDate.getText();
            String description = txtADescription.getText();
            String category = (String) cmbxCategory.getSelectedItem();
            String title = txtEntryTitle.getText();

            if (!Expense.isValidDate(date)) {
                throw new IllegalArgumentException("Invalid date format. Please use YYYY-MM-DD.");
            }

            manager.addExpense(new Expense(price, date, description, category, title));
            //successfully added a new entry, below merely gives feedbacks to user
            lblNewEntryWarning.setText("Expense added successfully!");
            lblNewEntryWarning.setForeground(Color.blue);
            lblNewEntryWarning.setVisible(true);
        } catch (NumberFormatException ex) {
            lblNewEntryWarning.setText("Invalid price input.\n");
            lblNewEntryWarning.setForeground(Color.red);
            lblNewEntryWarning.setVisible(true);
        } catch (IllegalArgumentException ex) {
            lblNewEntryWarning.setText(ex.getMessage() + "\n");
            lblNewEntryWarning.setForeground(Color.red);
            lblNewEntryWarning.setVisible(true);
        }
        
        updateDisplay(manager.getExpenses());   //update the display right after a new entry is added
    }//GEN-LAST:event_btnNewEntryActionPerformed

    //Write to file
    private void btnSaveToFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveToFileActionPerformed
        // TODO add your handling code here:
        dlgSaveConfirmWindow.setVisible(true);
        dlgSaveConfirmWindow.setAlwaysOnTop(true);
        dlgSaveConfirmWindow.pack();
    }//GEN-LAST:event_btnSaveToFileActionPerformed

    //Load from file
    private void btnLoadFromFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadFromFileActionPerformed
        // TODO add your handling code here:
        try {
                List<Expense> loadedExpenses = FileHandler.loadExpensesFromFile("expenses.txt");
                for (Expense expense : loadedExpenses) {
                    manager.addExpense(expense);
                }
                lblFileWarning.setText("Expenses loaded from file successfully!\n");
                lblFileWarning.setForeground(Color.blue);
                lblFileWarning.setVisible(true);
                
                //after successful load
                updateDisplay(manager.getExpenses());
            } catch (IOException ex) {
                lblFileWarning.setText("Error loading expenses from file.\n");
                lblFileWarning.setForeground(Color.red);
                lblFileWarning.setVisible(true);
            } catch(RuntimeException  e){   //If it passed IO and still run into exception we assume the data is corrupt. (For instance files before the year restrictions can have invalid years thus throw errors, this seeks to resolve that, well not really.)
                lblFileWarning.setText("File corrupted, please make a new file to overwrite it.\n");
                lblFileWarning.setForeground(Color.red);
                lblFileWarning.setVisible(true);
            }
    }//GEN-LAST:event_btnLoadFromFileActionPerformed

    //sort by price
    private void btnPriceSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPriceSortActionPerformed
        // TODO add your handling code here:
         List<Expense> sortedByPrice = manager.sortExpensesByPriceBubbleSort();
        System.err.print("Expenses sorted by price:\n");
        updateDisplay(sortedByPrice);
    }//GEN-LAST:event_btnPriceSortActionPerformed

    //Calculate the total of the manager's list
    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        // TODO add your handling code here:
        double total = manager.calculateTotalExpensesRecursive();
        txtTotalExpense.setText("$" + total );
    }//GEN-LAST:event_btnCalculateActionPerformed

    //Display only the expenses within specfic date range
    private void btnDisplayRangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayRangeActionPerformed
        // TODO add your handling code here:
        String startDate = txtStartDate.getText();
        String endDate = txtEndDate.getText();
        //QoL, if endDate is not put assuming the user wants to see the expense on that specific day
        if(endDate.isBlank()){
            endDate=startDate;
            txtEndDate.setText(endDate);
        }

        try {
            //Replace below with display update method
            List<Expense> rangeExpenses = manager.getExpensesWithinDateRange(startDate, endDate);
            updateDisplay(rangeExpenses);
        } catch (IllegalArgumentException ex) {
            lblRangeWarning.setText("Invalid date range or format. Use YYYY-MM-DD.");
            lblRangeWarning.setForeground(Color.red);
            lblRangeWarning.setVisible(true);
        }
    }//GEN-LAST:event_btnDisplayRangeActionPerformed

    //Search expense in manager using ID
    private void btnConfirmSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmSearchActionPerformed
        // TODO add your handling code here:
        String targetID=txtTargetID.getText();
        int result;
        //no input check needed, if ID doesn't match anything in the file it would just return -1
        manager.sortExpensesByID(); //sort the list by ID for binary search
        result=searchByID(manager.getExpenses(), targetID, 0, (manager.getExpenses().size()-1));
        
        if(result==-1){ //if target not found
            lblSearchWarning.setText("Target does not exist in data base.");
            lblSearchWarning.setForeground(Color.red);
            lblSearchWarning.setVisible(true);
        }else{
            Expense target=manager.getExpenses().get(result);
            updateDisplay(target);
            
            lblSearchWarning.setText("Target found.");
            lblSearchWarning.setForeground(Color.blue);
            lblSearchWarning.setVisible(true);
        }
    }//GEN-LAST:event_btnConfirmSearchActionPerformed

    //For file handling popup only, close said popup
    private void btnConcleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConcleActionPerformed
        // TODO add your handling code here:
        dlgSaveConfirmWindow.dispose();
    }//GEN-LAST:event_btnConcleActionPerformed

    //For file handling popup only, when click actually proceeds and saves to file
    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        try {
            FileHandler.saveExpensesToFile(manager.getExpenses(), "expenses.txt");
            lblFileWarning.setText("Expenses saved to file successfully!\n");
            lblFileWarning.setForeground(Color.blue);
            lblFileWarning.setVisible(true);
        } catch (IOException ex) {
            lblFileWarning.setText("Error saving expenses to file.\n");
            lblFileWarning.setForeground(Color.red);
            lblFileWarning.setVisible(true);
        }
        
        dlgSaveConfirmWindow.dispose();
    }//GEN-LAST:event_btnConfirmActionPerformed

    
    //*Custom Methods*   

    //This method bellow utilizes binary search to search for specific id and achieve this through recursion
    public static int searchByID(List<Expense> list, String targetID, int low, int high){   //Just let low be 0 and high be (the size of the list)-1
           
            if(low>high){   //item not found
                return -1;
            }
            int mid=low+(high-low)/2;
            //Base case
            if(list.get(mid).getID().equals(targetID)){
                return mid;
            }
            
            if(list.get(mid).getID().compareTo(targetID)>0){    //if the found item is greater in comparison
                high=mid-1;
                return searchByID(list,targetID,low,high);
            }else{  //if the found item is smaller in comparison
                low=mid+1;
                return searchByID(list,targetID,low,high);
            }
        }

    //Obviously updates the dipslay text area
    private void updateDisplay(List<Expense> l){ //used for basically all buttons that modifies the manager in someways
        List<Expense> allExpenses = l;
            if (allExpenses.isEmpty()) {
                txtAOutput.setText("No expenses to display.\n");
            } else {
                txtAOutput.setText(""); //Clear the text area
                for (Expense expense : allExpenses) {
                    txtAOutput.append(expense.toString() + "\n");
                }
            }
    }
    
    //Methode overloading
    private void updateDisplay(Expense o){ //For Id search displaying 
        txtAOutput.setText(""); //Clear the text area
        txtAOutput.append(o.toString() + "\n");
                
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExpenseTrackerApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExpenseTrackerApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExpenseTrackerApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExpenseTrackerApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExpenseTrackerApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnCategorySort;
    private javax.swing.JButton btnConcle;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnConfirmSearch;
    private javax.swing.JButton btnDateSort;
    private javax.swing.JButton btnDisplayRange;
    private javax.swing.JButton btnLoadFromFile;
    private javax.swing.JButton btnNewEntry;
    private javax.swing.JButton btnPriceSort;
    private javax.swing.JButton btnSaveToFile;
    private javax.swing.JComboBox<String> cmbxCategory;
    private javax.swing.JDialog dlgSaveConfirmWindow;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblConfirmWindownTitle;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblEndDate;
    private javax.swing.JLabel lblEntryTitle;
    private javax.swing.JLabel lblFileWarning;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JLabel lblNewEntryWarning;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblRangeWarning;
    private javax.swing.JLabel lblSearchWarning;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblTargetID;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTotalExpense;
    private javax.swing.JPanel pnlDisplayControls;
    private javax.swing.JPanel pnlFileControls;
    private javax.swing.JPanel pnlNewEntry;
    private javax.swing.JPanel pnlRangeSort;
    private javax.swing.JPanel pnlSearch;
    private javax.swing.JPanel pnlStoredEntries;
    private javax.swing.JPanel pnlTotalExpense;
    private javax.swing.JTextArea txtADescription;
    private javax.swing.JTextArea txtAOutput;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtEndDate;
    private javax.swing.JTextField txtEntryTitle;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtTargetID;
    private javax.swing.JTextField txtTotalExpense;
    // End of variables declaration//GEN-END:variables
}
